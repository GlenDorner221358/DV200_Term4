{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\glend\\\\Documents\\\\DV200\\\\KWARTAAL 4\\\\Whirlpool\\\\client\\\\src\\\\components\\\\groupbtn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Group({\n  setSelectedTag\n}) {\n  _s();\n  const [activeButton, setActiveButton] = useState(null);\n  const handleButtonClick = buttonName => {\n    // Check if the clicked button is the \"All\" button; if it is, clear the tag filter\n    if (buttonName === 'button1') {\n      setSelectedTag(null); // Clear the tag filter when the \"All\" button is clicked\n    }\n\n    // Check if the clicked button is already active; if it is, deactivate it\n    if (activeButton === buttonName) {\n      setActiveButton(null);\n    } else {\n      // Activate the clicked button\n      setActiveButton(buttonName);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ButtonGroup, {\n    \"aria-label\": \"Basic example\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleButtonClick('button1'),\n      className: activeButton === 'button1' ? 'active' : '',\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleButtonClick('button2'),\n      className: activeButton === 'button2' ? 'active' : '',\n      children: \"Newest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleButtonClick('button3'),\n      className: activeButton === 'button3' ? 'active' : '',\n      children: \"Unanswered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Group, \"2IlxFF4hDMq20XkKpqpiCEEIzsY=\");\n_c = Group;\nexport default Group;\nvar _c;\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"names":["React","useState","Button","ButtonGroup","jsxDEV","_jsxDEV","Group","setSelectedTag","_s","activeButton","setActiveButton","handleButtonClick","buttonName","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/glend/Documents/DV200/KWARTAAL 4/Whirlpool/client/src/components/groupbtn.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nfunction Group({ setSelectedTag }) {\r\n\r\n    const [activeButton, setActiveButton] = useState(null);\r\n\r\n    const handleButtonClick = (buttonName) => {\r\n      // Check if the clicked button is the \"All\" button; if it is, clear the tag filter\r\n      if (buttonName === 'button1') {\r\n        setSelectedTag(null); // Clear the tag filter when the \"All\" button is clicked\r\n      }\r\n    \r\n      // Check if the clicked button is already active; if it is, deactivate it\r\n      if (activeButton === buttonName) {\r\n        setActiveButton(null);\r\n      } else {\r\n        // Activate the clicked button\r\n        setActiveButton(buttonName);\r\n      }\r\n    };\r\n\r\n  return (\r\n    <ButtonGroup aria-label=\"Basic example\">\r\n       <Button \r\n        onClick={() => handleButtonClick('button1')}\r\n        className={activeButton === 'button1' ? 'active' : ''}\r\n      >\r\n       All\r\n      </Button>\r\n      \r\n    <Button \r\n        onClick={() => handleButtonClick('button2')}\r\n        className={activeButton === 'button2' ? 'active' : ''}\r\n      >\r\n       Newest\r\n      </Button>\r\n\r\n      <Button \r\n        onClick={() => handleButtonClick('button3')}\r\n        className={activeButton === 'button3' ? 'active' : ''}\r\n      >\r\n        Unanswered\r\n      </Button>\r\n  </ButtonGroup>\r\n  )\r\n}\r\n\r\nexport default Group"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,WAAW,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,KAAKA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAE/B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMU,iBAAiB,GAAIC,UAAU,IAAK;IACxC;IACA,IAAIA,UAAU,KAAK,SAAS,EAAE;MAC5BL,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB;;IAEA;IACA,IAAIE,YAAY,KAAKG,UAAU,EAAE;MAC/BF,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACL;MACAA,eAAe,CAACE,UAAU,CAAC;IAC7B;EACF,CAAC;EAEH,oBACEP,OAAA,CAACF,WAAW;IAAC,cAAW,eAAe;IAAAU,QAAA,gBACpCR,OAAA,CAACH,MAAM;MACNY,OAAO,EAAEA,CAAA,KAAMH,iBAAiB,CAAC,SAAS,CAAE;MAC5CI,SAAS,EAAEN,YAAY,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAG;MAAAI,QAAA,EACvD;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEXd,OAAA,CAACH,MAAM;MACHY,OAAO,EAAEA,CAAA,KAAMH,iBAAiB,CAAC,SAAS,CAAE;MAC5CI,SAAS,EAAEN,YAAY,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAG;MAAAI,QAAA,EACvD;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETd,OAAA,CAACH,MAAM;MACLY,OAAO,EAAEA,CAAA,KAAMH,iBAAiB,CAAC,SAAS,CAAE;MAC5CI,SAAS,EAAEN,YAAY,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAG;MAAAI,QAAA,EACvD;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB;AAACX,EAAA,CA3CQF,KAAK;AAAAc,EAAA,GAALd,KAAK;AA6Cd,eAAeA,KAAK;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}